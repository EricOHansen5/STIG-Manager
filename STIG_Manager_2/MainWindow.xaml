<Window x:Class="STIG_Manager_2.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:STIG_Manager_2"
        mc:Ignorable="d"
        Name="STIG_Manager"
        Title="STIG Manager" Height="700" Width="1200" Closing="STIG_Manager_Closing" WindowStartupLocation="CenterScreen">
    <Grid x:Name="MainGrid" SizeChanged="MainGrid_SizeChanged">
        <Grid.Background>
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                <LinearGradientBrush.RelativeTransform>
                    <TransformGroup>
                        <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                        <SkewTransform CenterY="0.5" CenterX="0.5"/>
                        <RotateTransform Angle="90" CenterY="0.5" CenterX="0.5"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </LinearGradientBrush.RelativeTransform>
                <GradientStop Color="#FFEDF2FF" Offset="0.107"/>
                <GradientStop Color="#FFDDFFD5" Offset="0.465"/>
                <GradientStop Color="#FFEDF2FF" Offset="0.905"/>
            </LinearGradientBrush>
        </Grid.Background>
        <Grid.ColumnDefinitions >
            <ColumnDefinition Width="1.1*" />
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="4*" />
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>
        <Border Grid.Column="0" BorderBrush="LightGray" BorderThickness="1" Padding="10">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <TextBox x:Name="txtSearch" Margin="10" Text="Search..." TextChanged="txtSearch_TextChanged" GotFocus="txtSearch_GotFocus" LostFocus="txtSearch_LostFocus" VerticalAlignment="Top">
                    <TextBox.ToolTip>
                        <Border Width="300">
                            <StackPanel>
                                <Label FontWeight="Bold" Content="Search"/>
                                <TextBlock TextWrapping="WrapWithOverflow" Text="The search textbox will search through the STIGs and find any matching text within that STIG. " Margin="10"/>
                            </StackPanel>
                        </Border>
                    </TextBox.ToolTip>
                </TextBox>
                <DockPanel Margin="10,30,10,0" LastChildFill="False" VerticalAlignment="Top">
                    <TextBlock Text="Showing"/>
                    <TextBlock Text="{Binding Items.Count, ElementName=dataGrid, Mode=OneWay}" Margin="5,0"/>
                    <CheckBox x:Name="chkbxShowAll" Content="Show All" Margin="0,0,10,0" DockPanel.Dock="Right" VerticalContentAlignment="Center" Click="chkbxShowAll_Click">
                        <CheckBox.ToolTip>
                            <Border Width="300">
                                <StackPanel>
                                    <Label FontWeight="Bold" Content="Show All"/>
                                    <TextBlock TextWrapping="WrapWithOverflow" Text="The show all checkbox when checked will remove the default filter (Hide automated STIGs)." Margin="10"/>
                                </StackPanel>
                            </Border>
                        </CheckBox.ToolTip>
                    </CheckBox>
                </DockPanel>
                <DataGrid x:Name="dataGrid" Margin="10,50,10,10" ItemsSource="{Binding Vulns}" 
                          CanUserAddRows="False" CanUserDeleteRows="False" IsReadOnly="True"
                          AutoGenerateColumns="False" SelectionUnit="FullRow" EnableColumnVirtualization="True">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="ID" Binding="{Binding ID}" IsReadOnly="True" SortDirection="Ascending"/>
                        <DataGridTextColumn Header="Status" Binding="{Binding DispStatus}" Width="*" IsReadOnly="True"/>
                    </DataGrid.Columns>
                    <DataGrid.RowStyle>
                        <Style TargetType="{x:Type DataGridRow}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DispStatus}" Value="Open">
                                    <Setter Property="Background" Value="Pink"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DispStatus}" Value="Not A Finding">
                                    <Setter Property="Background" Value="LightGreen"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DispStatus}" Value="Not Applicable">
                                    <Setter Property="Background" Value="LightBlue"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsPassWithCondition}" Value="True">
                                    <Setter Property="Background" Value="#FFFBF349"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>
                </DataGrid>
            </Grid>
        </Border>
        <GridSplitter Grid.Column="1" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="LightGray" ShowsPreview="True" Width="5"/>
        <Border Grid.Column="2" BorderBrush="LightGray" BorderThickness="1" Padding="10">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height ="1.8*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height ="1.8*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height ="1*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="0.8*"/>
                </Grid.RowDefinitions>
                <WrapPanel Margin="10,0" HorizontalAlignment="Left" Grid.Row="0">
                    <TextBlock Text="PowerShell Script:" FontWeight="Bold" HorizontalAlignment="Left" Margin="0,0,10,0" VerticalAlignment="Bottom"/>
                    <TextBlock Text="Version" Margin="10,0" VerticalAlignment="Center" FontWeight="Bold"/>
                    <ComboBox x:Name="cbPowerShellVersion" VerticalAlignment="Center" Margin="0,3" IsReadOnly="True" ItemsSource="{Binding SelectedItem.Versions, ElementName=dataGrid}" SelectedItem="{Binding SelectedItem.Current_Version, ElementName=dataGrid, FallbackValue=0, Mode=TwoWay, UpdateSourceTrigger=LostFocus}">
                        <ComboBox.ToolTip>
                            <Border Width="300">
                                <StackPanel>
                                    <Label FontWeight="Bold" Content="Version"/>
                                    <TextBlock TextWrapping="WrapWithOverflow" Text="The version dropdown will create different versions for each change you make on a script. This allows you to make changes to the script without worrying about losing your previous working version.
 The version will increment when the script textbox loses focus." Margin="10"/>
                                </StackPanel>
                            </Border>
                        </ComboBox.ToolTip>
                    </ComboBox>
                    <CheckBox x:Name="toggleManualOnly" Content="Is Manual Only" 
                              IsChecked="{Binding SelectedItem.IsManualOnly, ElementName=dataGrid, FallbackValue=False, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="20,2,10,2" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <CheckBox.ToolTip>
                            <Border Width="300">
                                <StackPanel>
                                    <Label FontWeight="Bold" Content="Is Manual Only"/>
                                    <TextBlock TextWrapping="WrapWithOverflow" Text="The is manual only checkbox is a way for you to specify what kind of check you want to perform.  For example if you don't want to write a 
                                               script for this STIG and just want to verify this STIG manually, check this checkbox and it will be skipped when running the scripts.  This checkbox will persist when you run across 
                                               different checklist files." Margin="10"/>
                                </StackPanel>
                            </Border>
                        </CheckBox.ToolTip>
                    </CheckBox>
                    <Button x:Name="btnParseScript" Content="Parse Script" Padding="10,1" Margin="10,4" Click="Click_Parse_Script">
                        <Button.ToolTip>
                            <Border Width="300">
                                <StackPanel>
                                    <Label FontWeight="Bold" Content="Parse Script"/>
                                    <TextBlock TextWrapping="WrapWithOverflow" Text="The parse script button will search the existing check content of the selected STIG and try to parse a powershell script from it." Margin="10"/>
                                </StackPanel>
                            </Border>
                        </Button.ToolTip>
                    </Button>
                    <Button x:Name="btnCleanScripts" Content="Clean Up Scripts" Padding="10,1" Margin="10,4" Click="Click_Clean_Scripts">
                        <Button.ToolTip>
                            <Border Width="300">
                                <StackPanel>
                                    <Label FontWeight="Bold" Content="Clean Up Scripts"/>
                                    <TextBlock TextWrapping="WrapWithOverflow" Text="The clean up scripts button will remove all older versions of the current script.  
 Once this button is clicked, it will ask you if you want to remove all versions besides the highest version.  If you choose yes, 
 the versions will reset to 1 and display the current version." Margin="10"/>
                                </StackPanel>
                            </Border>
                        </Button.ToolTip>
                    </Button>
                </WrapPanel>
                <TextBox Grid.Row="0" Padding="5,3,5,3" KeyUp="TextBox_KeyUp" x:Name="txtPowerShell" Margin="10,30,10,10"
                    AcceptsReturn="True" AcceptsTab="True" MinHeight="140" VerticalScrollBarVisibility="Visible" 
                         TextWrapping="WrapWithOverflow" Text="{Binding SelectedItem.Current_Script, ElementName=dataGrid, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" UndoLimit="500"/>
                <Popup x:Name="psPopUp" Width="298" MaxHeight="150" PlacementTarget="{Binding ElementName=txtPowerShell}">
                    <Border BorderBrush="Black" BorderThickness="1" VerticalAlignment="Top">
                        <ScrollViewer VerticalScrollBarVisibility="Auto" Background="White">
                            <StackPanel x:Name="stkAutoComplete"/>
                        </ScrollViewer>
                    </Border>
                </Popup>
                <GridSplitter Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Stretch" Background="LightGray" ShowsPreview="True" Height="3"/>

                <Border Grid.Row="2" BorderBrush="#FFABADB3" BorderThickness="1" Margin="10">
                    <ScrollViewer VerticalScrollBarVisibility="Visible" Margin="5,0,0,0">
                        <StackPanel>
                            <TextBlock Text="Group Title:" FontWeight="Bold" Margin="0,5,10,0"/>
                            <TextBlock x:Name="txbGroupTitle" TextWrapping="WrapWithOverflow" Margin="15,0,10,10" Text="{Binding SelectedItem.GroupTitle, ElementName=dataGrid}"/>
                            <TextBlock Text="Rule Title:" FontWeight="Bold" Margin="0,5,10,0"/>
                            <TextBlock x:Name="txbRuleTitle" TextWrapping="WrapWithOverflow" Margin="15,0,10,0" Text="{Binding SelectedItem.RuleTitle, ElementName=dataGrid}"/>
                            <TextBlock Text="Discussion:" FontWeight="Bold" Margin="0,5,10,0"/>
                            <TextBlock x:Name="txbDiscussion" TextWrapping="WrapWithOverflow" Margin="15,0,10,10" Text="{Binding SelectedItem.Discussion, ElementName=dataGrid}"/>
                            <TextBlock Text="Check Text:" FontWeight="Bold" Margin="0,5,10,0"/>
                            <TextBlock x:Name="txbCheckText" TextWrapping="WrapWithOverflow" Margin="15,0,10,10" Text="{Binding SelectedItem.CheckContent, ElementName=dataGrid}"/>
                            <TextBlock Text="Fix Text:" FontWeight="Bold" Margin="0,5,10,0"/>
                            <TextBlock x:Name="txbFixText" TextWrapping="WrapWithOverflow" Margin="15,0,10,10" Text="{Binding SelectedItem.FixText, ElementName=dataGrid}"/>
                        </StackPanel>
                    </ScrollViewer>
                </Border>
                <GridSplitter Grid.Row="3" VerticalAlignment="Center" HorizontalAlignment="Stretch" Background="LightGray" ShowsPreview="True" Height="3"/>

                <WrapPanel Grid.Row="4">
                    <TextBlock Text="Finding Details:" FontWeight="Bold" Margin="10,5,10,0" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                    <TextBlock Text="Status:" FontWeight="Bold" Margin="20,5,5,0"/>
                    <ComboBox Width="140" x:Name="cbStatus" Margin="5,3,0,3" ItemsSource="{Binding Vuln.Statuses}"
                              SelectedValue="{Binding SelectedItem.DispStatus, ElementName=dataGrid, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"/>
                    <Label DataContext="{Binding SelectedItem, ElementName=dataGrid}" FontWeight="Bold" Margin="20,3" Padding="10,3" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" UseLayoutRounding="False">
                        <Label.Style>
                            <Style TargetType="{x:Type Label}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Content" Value="(Severity)"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Severity}" Value="high">
                                        <Setter Property="Background" Value="Salmon"/>
                                        <Setter Property="Content" Value="CAT I"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Severity}" Value="medium">
                                        <Setter Property="Background" Value="#FFF4FA72"/>
                                        <Setter Property="Content" Value="CAT II"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Severity}" Value="low">
                                        <Setter Property="Background" Value="#FF7EFA72"/>
                                        <Setter Property="Content" Value="CAT III"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                </WrapPanel>
                <TextBox Grid.Row="4" x:Name="txtFindingDetails" Text="{Binding SelectedItem.FindingDetails, ElementName=dataGrid, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" Margin="10,30,10,10" AcceptsReturn="True" AcceptsTab="True" TextWrapping="WrapWithOverflow"/>
                <GridSplitter Grid.Row="5" VerticalAlignment="Center" HorizontalAlignment="Stretch" Background="LightGray" ShowsPreview="True" Height="3"/>

                <TextBlock Grid.Row="6" Text="Comments" FontWeight="Bold" Margin="10"/>
                <TextBox Grid.Row="6" x:Name="txtComments" Text="{Binding SelectedItem.Comments, ElementName=dataGrid, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" Margin="10,30,10,10" AcceptsReturn="True" AcceptsTab="True" TextWrapping="WrapWithOverflow"/>

            </Grid>
        </Border>
        <GridSplitter Grid.Column="3" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="LightGray" ShowsPreview="True" Width="5"/>
        <Border Grid.Column="4" BorderBrush="LightGray" BorderThickness="1" Padding="10">
            <StackPanel>
                <TextBlock Text="PowerShell:" Margin="5,0"/>
                <Button x:Name="btnRun" Padding="10,1" Margin="10,5,10,0" Content="Test Script" Click="Click_Run">
                    <Button.ToolTip>
                        <Border Width="300">
                            <StackPanel>
                                <Label FontWeight="Bold" Content="Test Script"/>
                                <TextBlock TextWrapping="WrapWithOverflow" Text="The test script button will run the currently selected script against the machine you are running this application on." Margin="10"/>
                            </StackPanel>
                        </Border>
                    </Button.ToolTip>
                </Button>
                <ProgressBar x:Name="progressBar_Run" IsIndeterminate="True" Margin="10,0,10,5" Height="5" Visibility="Hidden"/>
                <Button x:Name="btnRunAll" Padding="10,1" Margin="10,5,10,0" Content="Run All" Click="Click_Run_All">
                    <Button.ToolTip>
                        <Border Width="300">
                            <StackPanel>
                                <Label FontWeight="Bold" Content="Run All"/>
                                <TextBlock TextWrapping="WrapWithOverflow" Text="The run all button will interate through all the manual STIGs and run the powershell script for that STIG on the local machine.  Once they have completed running, the results will be stored in the STIG's findings." Margin="10"/>
                            </StackPanel>
                        </Border>
                    </Button.ToolTip>
                </Button>
                <ProgressBar x:Name="progressBar_RunAll" IsIndeterminate="True" Margin="10,0,10,5" Height="5" Visibility="Hidden"/>
                <Button x:Name="btnRunRemote" Padding="10,1" Margin="10,5,10,10" Content="Run Remote" Click="Click_Run_Remote">
                    <Button.ToolTip>
                        <Border Width="300">
                            <StackPanel>
                                <Label FontWeight="Bold" Content="Run Remote"/>
                                <TextBlock TextWrapping="WrapWithOverflow" Text="The run remote button will display the remote computers window, where you can run all the scripts against a remote machine.  
 The results will be stored in a copy of the current checklist with a small identifier appended to the filename." Margin="10"/>
                            </StackPanel>
                        </Border>
                    </Button.ToolTip>
                </Button>
                <Button x:Name="btnSearchRegedit" Padding="10,1" Margin="10,5,10,10" Content="Search For Key" Click="Click_Search_Registry" IsEnabled="{Binding SelectedItem.IsContainRegistryValue, ElementName=dataGrid, FallbackValue=False}"/>
                <Button x:Name="btnFunctions" Padding="10,1" Margin="10,5,10,10" Content="Functions" Click="Click_Functions">
                    <Button.ToolTip>
                        <Border Width="300">
                            <StackPanel>
                                <Label FontWeight="Bold" Content="Functions"/>
                                <TextBlock TextWrapping="WrapWithOverflow" Text="The functions button opens the functions window, where you are able to add/modify functions that you can use in your scripts." Margin="10"/>
                            </StackPanel>
                        </Border>
                    </Button.ToolTip>
                </Button>
                <Button x:Name="btnLoadScripts" Padding="10,1 " Margin="10,5,10,10" Content="Load Scripts" Click="Click_Load_Script">
                    <Button.ToolTip>
                        <Border Width="300">
                            <StackPanel>
                                <Label FontWeight="Bold" Content="Load Scripts"/>
                                <TextBlock TextWrapping="WrapWithOverflow" Text="The load scripts button will accept a .ps1/.txt file and try to parse it to populate the STIGs with those scripts." Margin="10"/>
                            </StackPanel>
                        </Border>
                    </Button.ToolTip>
                </Button>
                <Separator Margin="10,5" Height="3"/>
                <TextBlock Text="Checklist:" Margin="5,0"/>

                <BulletDecorator Margin="10,0">
                    <BulletDecorator.Bullet>
                        <Ellipse Height="2" Width="4" Fill="Black"/>
                    </BulletDecorator.Bullet>
                    <TextBlock x:Name="txbCName" Text="{Binding Short_Title, FallbackValue=Title, Mode=OneWay}" TextWrapping="WrapWithOverflow" Margin="3,0"/>
                </BulletDecorator>
                <BulletDecorator Margin="10,0">
                    <BulletDecorator.Bullet>
                        <Ellipse Height="2" Width="4" Fill="Black"/>
                    </BulletDecorator.Bullet>
                    <TextBlock x:Name="txbCRelease" Text="{Binding ReleaseInfo, FallbackValue=Release Info, Mode=OneWay}" TextWrapping="WrapWithOverflow" Margin="3,0"/>
                </BulletDecorator>
                <BulletDecorator Margin="10,0">
                    <BulletDecorator.Bullet>
                        <Ellipse Height="2" Width="4" Fill="Black"/>
                    </BulletDecorator.Bullet>
                    <TextBlock x:Name="txbCVersion" Text="{Binding Version, FallbackValue=Version, Mode=OneWay}" TextWrapping="WrapWithOverflow" Margin="3,0"/>
                </BulletDecorator>
                <Button x:Name="btnChecklist" Padding="10,1" Margin="10" Content="Load Checklist" Click="Click_Load_Checklist"/>
                <ComboBox x:Name="cbRemoteNames" Padding="10,1" Margin="10,5,10,0" DropDownOpened="Get_Remote_Computers_Names">
                    <ComboBox.ToolTip>
                        <TextBlock Width="250" Text="Click to select a remote computer name. Then click the Save New button to save a copy of the current checkfile with the remote computer name." TextWrapping="WrapWithOverflow" Margin="10"/>
                    </ComboBox.ToolTip>
                </ComboBox>
                <Button x:Name="btnSaveNewChecklist" Padding="10,1" Margin="10" Content="Save New" Click="Click_Save_Checklist">
                    <Button.ToolTip>
                        <Border Width="300">
                            <StackPanel>
                                <Label FontWeight="Bold" Content="Save New"/>
                                <TextBlock TextWrapping="WrapWithOverflow" Text="The save new button takes the currently loaded checklist and creates a copy of it wherever you want to save it." Margin="10"/>
                            </StackPanel>
                        </Border>
                    </Button.ToolTip>
                </Button>
                <Separator Margin="10,5" Height="3"/>
                <TextBlock Text="Benchmark:" Margin="5,0"/>
                <BulletDecorator Margin="10,0">
                    <BulletDecorator.Bullet>
                        <Ellipse Height="2" Width="4" Fill="Black"/>
                    </BulletDecorator.Bullet>
                    <TextBlock x:Name="txbBName" Text="{Binding Short_Title, FallbackValue=Title, Mode=OneWay}" TextWrapping="WrapWithOverflow" Margin="3,0"/>
                </BulletDecorator>
                <BulletDecorator Margin="10,0">
                    <BulletDecorator.Bullet>
                        <Ellipse Height="2" Width="4" Fill="Black"/>
                    </BulletDecorator.Bullet>
                    <TextBlock x:Name="txbBRelease" Text="{Binding Release, FallbackValue=Release Info, Mode=OneWay}" TextWrapping="WrapWithOverflow" Margin="3,0"/>
                </BulletDecorator>
                <BulletDecorator Margin="10,0">
                    <BulletDecorator.Bullet>
                        <Ellipse Height="2" Width="4" Fill="Black"/>
                    </BulletDecorator.Bullet>
                    <TextBlock x:Name="txbBVersion" Text="{Binding Version, FallbackValue=Version, Mode=OneWay}" TextWrapping="WrapWithOverflow" Margin="3,0"/>
                </BulletDecorator>
                <Button x:Name="btnBenchmark" Padding="10,1" Margin="10" Content="Load Benchmark" Click="Click_Load_Benchmark"/>
                <Button x:Name="btnClearBenchmark" Padding="10,1" Margin="10,5,10,10" Content="Clear Benchmark" Click="Click_Clear_Benchmark"/>
                <Separator Margin="10,5" Height="3"/>
                <TextBlock Text="Settings:" Margin="5,0"/>
                <Button x:Name="btnSave" Padding="10,1" Margin="10" Content="Save" Click="Click_Save" Background="#FF78FF59"/>
            </StackPanel>
        </Border>
    </Grid>

</Window>
